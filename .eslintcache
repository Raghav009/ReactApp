[{"D:\\Javascript\\React\\my-app\\src\\index.js":"1","D:\\Javascript\\React\\my-app\\src\\App.js":"2","D:\\Javascript\\React\\my-app\\src\\components\\Nav.js":"3","D:\\Javascript\\React\\my-app\\src\\components\\hooks\\Hooks.js":"4","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\Hooks.js":"5","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\Lazy.js":"6","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\LazyComponent.js":"7","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseState.js":"8","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseEffect.js":"9","D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Rest.js":"10","D:\\Javascript\\React\\my-app\\src\\components\\Events\\Event.js":"11","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseMemo.js":"12","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseCallback.js":"13","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseContent.js":"14","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\fakeApi.js":"15","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\HOC.js":"16","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\HOC2.js":"17","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\store.js":"18","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\actions.js":"19","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\actionTypes.js":"20","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\Reducers\\index.js":"21","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\Reducers\\visibilityFilter.js":"22","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\Reducers\\todos.js":"23","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\selectors.js":"24","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\TodoApp.js":"25","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\VisibilityFilter.js":"26","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\TodoList.js":"27","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\AddTodo.js":"28","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\constants.js":"29","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\Todo.js":"30","D:\\Javascript\\React\\my-app\\src\\components\\Examples\\ReduxHooks.js":"31","D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Other.js":"32","D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Name.js":"33","D:\\Javascript\\React\\my-app\\src\\components\\Questions\\Questions.js":"34","D:\\Javascript\\React\\my-app\\src\\components\\Events\\Event2.js":"35","D:\\Javascript\\React\\my-app\\src\\components\\Questions\\MultiRoute.js":"36","D:\\Javascript\\React\\my-app\\src\\components\\Routes.js":"37","D:\\Javascript\\React\\my-app\\src\\components\\Events\\Redux.js":"38","D:\\Javascript\\React\\my-app\\src\\components\\learning\\L1.js":"39","D:\\Javascript\\React\\my-app\\src\\components\\learning\\Normalize.js":"40","D:\\Javascript\\React\\my-app\\src\\components\\Go\\Example1.js":"41","D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Prop.js":"42"},{"size":197,"mtime":1614422901035,"results":"43","hashOfConfig":"44"},{"size":610,"mtime":1615009708730,"results":"45","hashOfConfig":"44"},{"size":1145,"mtime":1614847794928,"results":"46","hashOfConfig":"44"},{"size":414,"mtime":1614430826045,"results":"47","hashOfConfig":"44"},{"size":1794,"mtime":1614494926757,"results":"48","hashOfConfig":"44"},{"size":1189,"mtime":1614452216599,"results":"49","hashOfConfig":"44"},{"size":147,"mtime":1614425653874,"results":"50","hashOfConfig":"44"},{"size":2734,"mtime":1615012230690,"results":"51","hashOfConfig":"44"},{"size":2400,"mtime":1614846453915,"results":"52","hashOfConfig":"44"},{"size":3714,"mtime":1614667531964,"results":"53","hashOfConfig":"44"},{"size":1662,"mtime":1614840277234,"results":"54","hashOfConfig":"44"},{"size":1334,"mtime":1614880690024,"results":"55","hashOfConfig":"44"},{"size":1317,"mtime":1614839496249,"results":"56","hashOfConfig":"44"},{"size":1274,"mtime":1614833990186,"results":"57","hashOfConfig":"44"},{"size":1643,"mtime":1614445374866,"results":"58","hashOfConfig":"44"},{"size":1095,"mtime":1614451380965,"results":"59","hashOfConfig":"44"},{"size":1239,"mtime":1614848490614,"results":"60","hashOfConfig":"44"},{"size":220,"mtime":1614484909677,"results":"61","hashOfConfig":"44"},{"size":377,"mtime":1614458180391,"results":"62","hashOfConfig":"44"},{"size":121,"mtime":1614456817852,"results":"63","hashOfConfig":"44"},{"size":188,"mtime":1614456730007,"results":"64","hashOfConfig":"44"},{"size":413,"mtime":1614461273752,"results":"65","hashOfConfig":"44"},{"size":831,"mtime":1614458354022,"results":"66","hashOfConfig":"44"},{"size":976,"mtime":1614461250599,"results":"67","hashOfConfig":"44"},{"size":678,"mtime":1614462995706,"results":"68","hashOfConfig":"44"},{"size":1138,"mtime":1614461364083,"results":"69","hashOfConfig":"44"},{"size":1390,"mtime":1614461148151,"results":"70","hashOfConfig":"44"},{"size":813,"mtime":1614458102675,"results":"71","hashOfConfig":"44"},{"size":121,"mtime":1614461130227,"results":"72","hashOfConfig":"44"},{"size":575,"mtime":1614458508675,"results":"73","hashOfConfig":"44"},{"size":1727,"mtime":1614940821306,"results":"74","hashOfConfig":"44"},{"size":3877,"mtime":1615105478860,"results":"75","hashOfConfig":"44"},{"size":2920,"mtime":1614535843556,"results":"76","hashOfConfig":"44"},{"size":2504,"mtime":1615008904768,"results":"77","hashOfConfig":"44"},{"size":1369,"mtime":1615007542376,"results":"78","hashOfConfig":"44"},{"size":1012,"mtime":1615008326412,"results":"79","hashOfConfig":"44"},{"size":1588,"mtime":1615179981826,"results":"80","hashOfConfig":"44"},{"size":3236,"mtime":1615009822095,"results":"81","hashOfConfig":"44"},{"size":241,"mtime":1614965154567,"results":"82","hashOfConfig":"44"},{"size":1243,"mtime":1614965588956,"results":"83","hashOfConfig":"44"},{"size":488,"mtime":1615105353394,"results":"84","hashOfConfig":"44"},{"size":3692,"mtime":1615197077783,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1tonshe",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Javascript\\React\\my-app\\src\\index.js",[],["183","184"],"D:\\Javascript\\React\\my-app\\src\\App.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Nav.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\hooks\\Hooks.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\Hooks.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\Lazy.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\LazyComponent.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseState.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseEffect.js",["185","186"],"import axios from 'axios';\r\nimport React, { useState, useEffect, Component, PureComponent, useRef } from 'react';\r\n\r\nconst UseEffectC = () => {\r\n    const [count, setCount] = useState(0);\r\n    const [response, setResponse] = useState([]);\r\n    const [data, setData] = useState({});\r\n    const inputEl = useRef(); // useRef hook !\r\n    const commentURL = 'http://localhost:5000/posts';\r\n\r\n    useEffect(() => {\r\n        document.title = `You clicked ${count} times`;\r\n    }, [count])\r\n\r\n    useEffect(() => {\r\n        count > 0 && axios.get(commentURL + '/' + count).then(r => {\r\n            console.log(r.data);\r\n            setResponse(r.data)\r\n        }).catch(e => console.error(e))\r\n    }, [count])\r\n\r\n    useEffect(() => {\r\n        console.log(\"Response Success\")\r\n    },[response])\r\n\r\n    useEffect(()=>{\r\n        console.log('Data is saved');\r\n    },[data])\r\n    //  if you dont specify the empty array or inital value that is dependent \r\n    //  , when it has to trigger this event on any specific property otherwise\r\n    //  it will keep on calling this method - very dangerous\r\n\r\n    const Click = () => {\r\n        setCount(count + 1)\r\n        let inp = inputEl.current; // Used element Reference here\r\n        inp.focus();\r\n        console.log(inp.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>You clicked {count} times</p>\r\n            <input ref={inputEl} type=\"text\" />\r\n            <button onClick={Click}>\r\n                Click me\r\n            </button>\r\n            {JSON.stringify(response)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseEffectC;\r\n\r\n\r\nexport class Example1 extends PureComponent { // Component - replace PureComponent with Component\r\n    state = {\r\n        name: 'Raghava'\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            // console.log('Interval Method') // uncommnet to see results\r\n            this.setState({ name: 'Rajesh' })\r\n        }, 1000);\r\n    }\r\n\r\n     /// shallow compare preValue == newValue -- Components\r\n\r\n     /// preValue === newValue && preValue.name === newValue.name -- PureComponents\r\n\r\n    Click = () => {\r\n        this.setState({ name: 'Ram' });\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"Render Method\");\r\n        return (\r\n            <div>\r\n                {this.state.name}\r\n                <button onClick={() => this.Click()}>Click</button>\r\n            </div>\r\n        )\r\n    }\r\n}","D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Rest.js",["187","188","189","190","191","192","193"],"import axios from 'axios'\r\nimport React, { useState } from 'react'\r\n\r\nconst Rest = () => {\r\n\r\n    const postURL = 'http://localhost:5000/posts';\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const [Author, setAuthor] = useState('');\r\n\r\n    const [Title, setTitle] = useState('');\r\n\r\n    const [Id, setId] = useState('');\r\n\r\n    const [saveLabel, setsaveLabel] = useState('Save');\r\n\r\n    const [isEdit, setEdit] = useState(false);\r\n\r\n    const GetData = () => {\r\n        axios.get(postURL).then((r) => {\r\n            console.log(r.data);\r\n            setPosts(r.data)\r\n        })\r\n    }\r\n\r\n    const Savepost = () => {\r\n        let data = { author: Author, title: Title };\r\n        if(isEdit){\r\n            axios.put(postURL + '/' + Id, data).then(r=>{\r\n                console.log(r.data)\r\n                let newPosts = posts.map(e => {\r\n                    if(e.id == Id){\r\n                        // update with new value \r\n                        return r.data;\r\n                    }\r\n                    return e;\r\n                })\r\n                setPosts(newPosts);\r\n                setsaveLabel('Save');\r\n                setEdit(false);\r\n            })\r\n        }else{\r\n            axios.post(postURL, data).then((r) => {\r\n                console.log(r.data)\r\n                // merge with exitsing records\r\n                setPosts([...posts, r.data])\r\n            })\r\n        }   \r\n        setAuthor('')\r\n        setTitle('')     \r\n    }\r\n\r\n    const OnChange = (e, i) => {\r\n        let value = e.target.value\r\n        if (i == 1) {\r\n            setAuthor(value);\r\n        } else if( i == 2){\r\n            setTitle(value);\r\n        }else {\r\n            setId(value);\r\n        }\r\n    }\r\n\r\n    const OnEdit = () =>{\r\n        if(Id !== ''){\r\n            setEdit(true);\r\n            setsaveLabel('Update')\r\n            // To Find the Exiting post\r\n            let post = posts.find(e => e.id == Id);\r\n            setAuthor(post.author)\r\n            setTitle(post.title)\r\n        }\r\n    }\r\n\r\n    const OnDelete = () => {\r\n        if(Id !== ''){\r\n            axios.delete(postURL + '/' + Id).then(r => {\r\n                if(r.status == 200){\r\n                    // Display records other than deleted Item\r\n                    setPosts(posts.filter(e=> e.id != Id))\r\n                }\r\n            })\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Rest Example\r\n            <div>\r\n                Author :\r\n                <input type=\"text\" value={Author} onChange={(e) => setAuthor(e.target.value)} />\r\n\r\n                Title :\r\n                <input type=\"text\" value={Title} onChange={(e) => setTitle(e.target.value)} />\r\n\r\n                <button onClick={Savepost}> {saveLabel} </button>\r\n            </div>\r\n\r\n            <div>\r\n                Display Posts:\r\n                {\r\n                    posts.map((e) => {\r\n                        return <div key={e.id}>\r\n                            Author : {e.author} -\r\n                        Title : {e.title}\r\n                        </div>\r\n                    })\r\n                }\r\n            </div>\r\n            <div>\r\n                <button onClick={GetData}> Get Posts</button>\r\n            </div>\r\n\r\n            <div>\r\n                <select onChange={(e)=> setId(e.target.value)}>\r\n                    <option value=\"\">Select</option>\r\n                    {\r\n                        posts.map(e => <option key={e.id} value={e.id}>{e.id}</option>)\r\n                    }                    \r\n                </select>\r\n                <button onClick={OnEdit}>Edit</button>\r\n                <button onClick={OnDelete}>Delete</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rest;","D:\\Javascript\\React\\my-app\\src\\components\\Events\\Event.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseMemo.js",["194","195","196","197"],"import React, { useState, useMemo, useEffect } from 'react';\r\n\r\nconst Memo = () => {\r\n\r\n    const [textinp, setTextinp] = InputHook('Init');\r\n    const skills = [\"HTML\", \"CSS\", \"JavaScript\", '...1000s more']\r\n\r\n    const [list, setList] = useState(skills);\r\n\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    const searchResults = useMemo(() => {\r\n        return skills.filter(s => s.includes(searchTerm));\r\n    }, [searchTerm])\r\n\r\n    // useEffect(() => {\r\n    //     setList(skills.filter(s => s.includes(searchTerm)))\r\n    // }, [searchTerm])\r\n\r\n    const handleSearchInput = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    }\r\n    return (\r\n        <div> Memo Component\r\n            <input type=\"text\" value={textinp} onChange={(e) => setTextinp(e)} />\r\n            <h3>Search Results</h3>\r\n            <input onBlur={handleSearchInput} />\r\n            <ul>\r\n                {\r\n                    searchResults.map((result, i) => (\r\n                        <li key={i}>{result}</li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>)\r\n        ;\r\n}\r\n\r\n// Custom Hook\r\nconst InputHook = (init) => {\r\n\r\n    const [value, setValue] = useState(init);\r\n\r\n    const change = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return [value, change];\r\n}\r\n\r\nexport default Memo;","D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseCallback.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Hooks\\UseContent.js",["198"],"import React, { createContext, useContext, useState } from \"react\";\r\n// Example How the Props Work !\r\nconst UserContext = createContext();\r\n\r\n/*\r\n    < value=\"{name:Fred}\">  <! parent -->\r\n        <div> <!  Child--> \r\n            <h1>Welcome,Fred!</h1> <! Grand Child-->\r\n            <br />\r\n            <div>Main app content</div>\r\n        </div>\r\n    </>\r\n*/\r\n\r\nconst Context = () => {\r\n    const [user] = useState({ name: \"Fred\" });\r\n\r\n    return (\r\n        <UserContext.Provider value={user}>\r\n            <Main />\r\n        </UserContext.Provider>\r\n    );\r\n};\r\nconst Main = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <br />\r\n            <div>Main app content</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Log = (value) => {\r\n    console.log(value);\r\n    return null;\r\n};\r\n\r\nconst Header = () => {\r\n    const user = useContext(UserContext);\r\n    return (\r\n        <h1>\r\n            Welcome,\r\n            <UserContext.Consumer>\r\n                { user => (<div>{user.name} From Consumer</div> )}\r\n            </UserContext.Consumer>\r\n            {user.name}!\r\n        </h1>\r\n    );\r\n};\r\n\r\nexport default Context;\r\n","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\fakeApi.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\HOC.js",["199"],"// https://reactjs.org/docs/higher-order-components.html\r\n// https://scotch.io/courses/5-essential-react-concepts-to-know-before-learning-redux/higher-order-components-in-react\r\n\r\nimport React, { Component, useState } from 'react'\r\n\r\nconst simpleComponent = ({name, age , time}) => {\r\n    return (\r\n        <div>\r\n            Hello {name} ! Age : {age.value} ! {time}\r\n            <input type=\"text\" value={age.value} onChange={age.onChange}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst simpleHOC = (WrappedComponent) => (props) => {\r\n\r\n    const [age, setAge] = useState('');\r\n\r\n    const Change = (e) => {\r\n        setAge(e.target.value);\r\n    }\r\n\r\n    const changeProp = {\r\n        age : {\r\n            value: age,\r\n            onChange : Change\r\n        }\r\n    }\r\n\r\n    return (\r\n        <WrappedComponent {...props} time=\"Sunday\" {...changeProp}/>\r\n    )\r\n}\r\n\r\nconst NewComponent = simpleHOC(simpleComponent);\r\n\r\nconst DisplayHoc = () => {\r\n\r\n    return (\r\n        <div>\r\n            <NewComponent name=\"newComponent\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayHoc;\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Javascript\\React\\my-app\\src\\components\\Lazy\\HOC2.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux\\store.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux\\actions.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux\\actionTypes.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux\\Reducers\\index.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux\\Reducers\\visibilityFilter.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux\\Reducers\\todos.js",["200"],"import { ADD_TODO, TOGGLE_TODO } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  allIds: [],\r\n  byIds: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        allIds: [...state.allIds, id],\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            content,\r\n            completed: false\r\n          }\r\n        }\r\n      };\r\n    }\r\n    case TOGGLE_TODO: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            ...state.byIds[id],\r\n            completed: !state.byIds[id].completed\r\n          }\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Javascript\\React\\my-app\\src\\components\\Redux\\selectors.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\TodoApp.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\VisibilityFilter.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\TodoList.js",["201"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Todo from \"./Todo\";\r\n// import { getTodos } from \"../redux/selectors\";\r\nimport { getTodosByVisibilityFilter } from \"../Redux/selectors\";\r\nimport { VISIBILITY_FILTERS } from \"./constants\";\r\n\r\nconst TodoList = ({ todos }) => (\r\n  <ul className=\"todo-list\">\r\n    {todos && todos.length\r\n      ? todos.map((todo, index) => {\r\n          return <Todo key={`todo-${todo.id}`} todo={todo} />;\r\n        })\r\n      : \"No todos, yay!\"}\r\n  </ul>\r\n);\r\n\r\n// const mapStateToProps = state => {\r\n//   const { byIds, allIds } = state.todos || {};\r\n//   const todos =\r\n//     allIds && state.todos.allIds.length\r\n//       ? allIds.map(id => (byIds ? { ...byIds[id], id } : null))\r\n//       : null;\r\n//   return { todos };\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  const { visibilityFilter } = state;\r\n  const todos = getTodosByVisibilityFilter(state, visibilityFilter);\r\n  return { todos };\r\n  //   const allTodos = getTodos(state);\r\n  //   return {\r\n  //     todos:\r\n  //       visibilityFilter === VISIBILITY_FILTERS.ALL\r\n  //         ? allTodos\r\n  //         : visibilityFilter === VISIBILITY_FILTERS.COMPLETED\r\n  //           ? allTodos.filter(todo => todo.completed)\r\n  //           : allTodos.filter(todo => !todo.completed)\r\n  //   };\r\n};\r\n// export default TodoList;\r\nexport default connect(mapStateToProps)(TodoList);\r\n","D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\AddTodo.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\constants.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Redux-components\\Todo.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Examples\\ReduxHooks.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Other.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Name.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Questions\\Questions.js",["202","203"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nconst Question = () => {\r\n\r\n    const { name } = useParams();\r\n\r\n    const [count, setCount] = useState('Init');\r\n\r\n    const [obj, setObj] = useState({ name: 'Init' });\r\n\r\n    const [arry, setArry] = useState([]);\r\n\r\n    const [loading, setloading] = useState(true)\r\n    // true = Loading... // False = i will not diplay\r\n\r\n    const [initObj, setinitObj] = useState({ Title: \"Krack\" });\r\n\r\n    const [intArr, setInitArr] = useState(['a', 'b']);\r\n\r\n    const OnHandle = () => {\r\n        setCount('Sample')\r\n\r\n        setObj({ name: 'Update' });\r\n\r\n        setArry(['a', 'b']);\r\n\r\n        let ob = { ...initObj, time: \"Now\", Title: 'Krack Updated' }\r\n\r\n        setinitObj(ob)\r\n        // try to send a new Object\r\n        let temp = ['c', 'd'];\r\n\r\n        // setInit(...intarr,['d','e']) // ['a','b',['c','d']]\r\n\r\n        let d = [...intArr, ...temp] // ['a','b','c','d']\r\n\r\n        setInitArr(d);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const id = setTimeout(() => {\r\n            setloading(false);\r\n        }, 2000)\r\n        return () => clearInterval(id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setInitArr([...intArr, 'e', 'F'])\r\n        /// THis piece of code get executed when ever count gets modified  \r\n\r\n        return () => {\r\n            console.log(\"Clean up\")\r\n        }\r\n    }, [count])\r\n\r\n    const onNew = () => {\r\n        setCount('From New ')\r\n    }\r\n\r\n    const display = () => {\r\n        return (\r\n\r\n            <div className=\"row\">\r\n                Name : {name}\r\n\r\n                <button onClick={OnHandle}>{count}</button>\r\n\r\n                <button onClick={onNew}>New</button>\r\n                {obj.name}\r\n\r\n                <div>\r\n                    {arry[0]}, {arry[1]}\r\n                </div>\r\n                <div>\r\n                    {\r\n                        initObj.time ?? initObj.time\r\n                    }\r\n                    {initObj.Title}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Question Component {loading == false ? display() : 'Loading..'}\r\n            <div>\r\n                <Link to=\"/multi/Comp1\" className=\"nav-link\">Component 1</Link>\r\n                <Link to=\"/multi/Comp2\" className=\"nav-link\">Component 2</Link>\r\n                <Link to=\"/multi\" className=\"nav-link\">Multi Component</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","D:\\Javascript\\React\\my-app\\src\\components\\Events\\Event2.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Questions\\MultiRoute.js",["204"],"import React from 'react';\r\nimport { Switch, Route, useRouteMatch, useParams } from 'react-router-dom';\r\n\r\nconst MultiRoute = ({ routes }) => {\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div>\r\n            Multi Route Components\r\n            {/*  /multi route */}\r\n            <Switch>\r\n                {/* {\r\n                        routes && routes.map((e,i)=>{\r\n                            return <Route key={i} exact path={e.path} component={e.component}/>\r\n                        })\r\n                    } */}\r\n                <Route path={`/multi/Comp1`} component={Comp1} />\r\n                <Route path={`${path}/Comp2`} component={Comp2} />\r\n            </Switch>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comp1 = () => {\r\n    return (\r\n        <div>\r\n            Display Component 1\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Comp2 = () => {\r\n    return (\r\n        <div>\r\n            Display Component 2\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Comp1, Comp2 };\r\n\r\nexport default MultiRoute;\r\n\r\n","D:\\Javascript\\React\\my-app\\src\\components\\Routes.js",["205","206","207"],"import Hooks from './Hooks/Hooks';\r\nimport LazyC from \"./Lazy/Lazy\";\r\nimport Rest from \"./Examples/Rest\";\r\nimport Event from './Events/Event';\r\nimport TodoApp from './Redux-components/TodoApp';\r\nimport ReduxHooks from \"./Examples/ReduxHooks\";\r\nimport ReduxC from \"./Examples/Other\";\r\nimport Question from \"./Questions/Questions\";\r\nimport MultiRoute, { Comp1, Comp2 } from \"./Questions/MultiRoute\";\r\nimport Event2 from \"./Events/Event2\";\r\nimport Go from './Go/Example1';\r\nimport ExM from './Examples/Prop';\r\n\r\nconst Routes = [\r\n    {\r\n      path: '/',\r\n      component: Hooks\r\n    },\r\n    {\r\n      path: '/lazy',\r\n      component: LazyC\r\n    },\r\n    {\r\n      path: '/example',\r\n      component: Rest\r\n    },\r\n    {\r\n      path: '/events',\r\n      component: Event\r\n    },\r\n    {\r\n      path: '/redux',\r\n      component: TodoApp\r\n    },\r\n    {\r\n      path: '/reduxhooks',\r\n      component: ReduxHooks\r\n    },\r\n    {\r\n      path: '/redux2',\r\n      component: ReduxC\r\n    },\r\n    {\r\n      path: '/questions/:name',\r\n      component: Question\r\n    },\r\n    // {\r\n    //   path: '/multi',\r\n    //   component: MultiRoute,\r\n    //   routes : [\r\n    //       {\r\n    //           path:'/multi/Comp1',\r\n    //           component: Comp1\r\n    //       },\r\n    //       {\r\n    //           path : '/multi/Comp2',\r\n    //           component: Comp2\r\n    //       }\r\n    //   ]\r\n    // },\r\n    {\r\n      path: '/events2/:js',\r\n      component: Event2\r\n    },\r\n    {\r\n      path:'/Go',\r\n      component : Go\r\n    },\r\n    {\r\n      path : '/Ex1',\r\n      component: ExM\r\n    }\r\n  ]\r\n\r\n  export default Routes;","D:\\Javascript\\React\\my-app\\src\\components\\Events\\Redux.js",["208","209","210","211","212","213"],"import React, { useState } from 'react'\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst RexComp = () => {\r\n    return (\r\n        <div>\r\n            Redux Comp\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\n\r\nMutable - changeable\r\n\r\nconst Person = { Name : 'John' , Age : 20 }\r\n\r\nPerson.City = 'Banglore';\r\n\r\n// If we try to assign a new object it will throw error \r\n\r\nPerson = { Name : 'Cena' , Age : 22 } --> Invalid Assignment\r\n\r\nconst List = [1,2,3,4,5]\r\n\r\nList.push(6)\r\n\r\n// Same way for Array when you assign new Array --> Invalid Assignment\r\n\r\nList = [7,8,9]\r\n\r\nImmutable - new object = make copies of existing objects/arrays, \r\nand then modify the copies\r\n\r\nconst Person_new = { ...Person, Name:'Cena', Age:22 }\r\n\r\nconst List_new = [ ...List, 7,8,9 ]\r\n\r\nRedux :- expects that all state updates are done immutably\r\n\r\nStore - {Object} Which store the Data in the React App and its {ReadOnly} - \r\nAny given piece of data should only exist in {one location}\r\n\r\nconst init = {\r\n    name : ''\r\n}\r\n\r\nAction - something that happened in the application\r\n\r\n{ type : 'Add', payload :{Data_any} }\r\n\r\nReducer - Simple Function which takes state and action Returns the [{new State}] - \r\ndecides how to update the state if necessary\r\n\r\nconst reducer = (state = init, action) => {\r\n    switch (action.type){\r\n        case 'Add':            \r\n            return { name:action.payload };\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nDispatch - The only way to update the state is to call \r\nand pass in an action object\r\n\r\nconst dispatch = useDispatch();\r\n\r\nhow to call dispatch method --> dispatch({action:'Add', payload:'Sample'})\r\n\r\nSelectors - extract specific pieces of information from a store\r\n\r\nconst name = useSelector(state => state.name);\r\n\r\n{name} in JSX or name in component - use the latest state of that store property \r\n\r\nCreate Store :\r\nExample 1:\r\nconst store = createStore(reducer)  // Pass Reducer or combined Reducers\r\n\r\nExample 2:\r\nconst combined = combineReducers({\r\n    name:reducer,\r\n    another_store:another_store_reducer\r\n})\r\n\r\nconst store = createStore(combined)\r\n\r\nJSX for root element \r\n\r\n<Provider store={store}>\r\n    <Components /> { // Your Components that need to access }\r\n</Provider>\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const RexComp = ({name}) =>{ // Main Component \r\n\r\n//     const [Test, setTest] = useState(name)\r\n\r\n//     const Fun = (e) => {\r\n//         setTest(e.target.value);       \r\n//     }\r\n\r\n//     const Click = (e) => {\r\n//         console.log(e);\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             Redux Comp \r\n//             <Comp1 name={Test} sample={Fun} hat={Click}/> \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const Comp1 = ({name , sample, hat }) => { // Child Component\r\n//     return (\r\n//         <div>            \r\n//             {name}\r\n//             <input onChange={(e) => sample(e)} />\r\n//             <Comp2 name={hat} sample={name} /> \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// const Comp2 = ({ name , sample }) => {\r\n\r\n//     return (\r\n//         <button onClick={() => name(sample)}>Click</button>\r\n//     )\r\n// }\r\n\r\nexport default RexComp;\r\n","D:\\Javascript\\React\\my-app\\src\\components\\learning\\L1.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\learning\\Normalize.js",["214"],"import { normalize, schema } from 'normalizr';\r\n\r\nconst user = new schema.Entity('users');\r\n\r\n// Define your comments schema\r\nconst comment = new schema.Entity('comments', {\r\n    commenter: user\r\n});\r\n\r\n// Define your article\r\nconst article = new schema.Entity('articles', {\r\n    author: user,\r\n    comments: [comment]\r\n});\r\n\r\nconst originalData = {\r\n    \"id\": \"123\",\r\n    \"author\": {\r\n        \"id\": \"1\",\r\n        \"name\": \"Paul\"\r\n    },\r\n    \"title\": \"My awesome blog post\",\r\n    \"comments\": [\r\n        {\r\n            \"id\": \"324\",\r\n            \"commenter\": {\r\n                \"id\": \"2\",\r\n                \"name\": \"Nicole\"\r\n            }\r\n        }\r\n    ]\r\n}\r\n\r\nconst normalizedData = normalize(originalData, article);\r\n\r\nconst result = {\r\n    result: \"123\",\r\n    entities: {\r\n        \"articles\": {\r\n            \"123\": {\r\n                id: \"123\",\r\n                author: \"1\",\r\n                title: \"My awesome blog post\",\r\n                comments: [\"324\"]\r\n            }\r\n        },\r\n        \"users\": {\r\n            \"1\": { \"id\": \"1\", \"name\": \"Paul\" },\r\n            \"2\": { \"id\": \"2\", \"name\": \"Nicole\" }\r\n        },\r\n        \"comments\": {\r\n            \"324\": { id: \"324\", \"commenter\": \"2\" }\r\n        }\r\n    }\r\n}\r\n\r\nexport { normalizedData };","D:\\Javascript\\React\\my-app\\src\\components\\Go\\Example1.js",[],"D:\\Javascript\\React\\my-app\\src\\components\\Examples\\Prop.js",["215","216","217","218","219","220"],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":2,"column":38,"nodeType":"227","messageId":"228","endLine":2,"endColumn":47},{"ruleId":"225","severity":1,"message":"229","line":7,"column":18,"nodeType":"227","messageId":"228","endLine":7,"endColumn":25},{"ruleId":"230","severity":1,"message":"231","line":33,"column":29,"nodeType":"232","messageId":"233","endLine":33,"endColumn":31},{"ruleId":"225","severity":1,"message":"234","line":54,"column":11,"nodeType":"227","messageId":"228","endLine":54,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":56,"column":15,"nodeType":"232","messageId":"233","endLine":56,"endColumn":17},{"ruleId":"230","severity":1,"message":"231","line":58,"column":22,"nodeType":"232","messageId":"233","endLine":58,"endColumn":24},{"ruleId":"230","severity":1,"message":"231","line":70,"column":45,"nodeType":"232","messageId":"233","endLine":70,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":79,"column":29,"nodeType":"232","messageId":"233","endLine":79,"endColumn":31},{"ruleId":"230","severity":1,"message":"235","line":81,"column":52,"nodeType":"232","messageId":"233","endLine":81,"endColumn":54},{"ruleId":"225","severity":1,"message":"236","line":1,"column":36,"nodeType":"227","messageId":"228","endLine":1,"endColumn":45},{"ruleId":"225","severity":1,"message":"237","line":8,"column":12,"nodeType":"227","messageId":"228","endLine":8,"endColumn":16},{"ruleId":"225","severity":1,"message":"238","line":8,"column":18,"nodeType":"227","messageId":"228","endLine":8,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":14,"column":8,"nodeType":"241","endLine":14,"endColumn":20,"suggestions":"242"},{"ruleId":"225","severity":1,"message":"243","line":34,"column":7,"nodeType":"227","messageId":"228","endLine":34,"endColumn":10},{"ruleId":"225","severity":1,"message":"226","line":4,"column":17,"nodeType":"227","messageId":"228","endLine":4,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":8,"column":1,"nodeType":"246","endLine":40,"endColumn":2},{"ruleId":"225","severity":1,"message":"247","line":6,"column":10,"nodeType":"227","messageId":"228","endLine":6,"endColumn":28},{"ruleId":"239","severity":1,"message":"248","line":56,"column":8,"nodeType":"241","endLine":56,"endColumn":15,"suggestions":"249"},{"ruleId":"230","severity":1,"message":"231","line":89,"column":41,"nodeType":"232","messageId":"233","endLine":89,"endColumn":43},{"ruleId":"225","severity":1,"message":"250","line":2,"column":40,"nodeType":"227","messageId":"228","endLine":2,"endColumn":49},{"ruleId":"225","severity":1,"message":"251","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":18},{"ruleId":"225","severity":1,"message":"252","line":9,"column":22,"nodeType":"227","messageId":"228","endLine":9,"endColumn":27},{"ruleId":"225","severity":1,"message":"253","line":9,"column":29,"nodeType":"227","messageId":"228","endLine":9,"endColumn":34},{"ruleId":"225","severity":1,"message":"254","line":1,"column":17,"nodeType":"227","messageId":"228","endLine":1,"endColumn":25},{"ruleId":"225","severity":1,"message":"255","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":21},{"ruleId":"225","severity":1,"message":"256","line":2,"column":23,"nodeType":"227","messageId":"228","endLine":2,"endColumn":38},{"ruleId":"225","severity":1,"message":"257","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":18},{"ruleId":"225","severity":1,"message":"258","line":3,"column":20,"nodeType":"227","messageId":"228","endLine":3,"endColumn":31},{"ruleId":"225","severity":1,"message":"259","line":3,"column":33,"nodeType":"227","messageId":"228","endLine":3,"endColumn":44},{"ruleId":"225","severity":1,"message":"260","line":36,"column":7,"nodeType":"227","messageId":"228","endLine":36,"endColumn":13},{"ruleId":"225","severity":1,"message":"261","line":15,"column":12,"nodeType":"227","messageId":"228","endLine":15,"endColumn":17},{"ruleId":"225","severity":1,"message":"262","line":17,"column":11,"nodeType":"227","messageId":"228","endLine":17,"endColumn":22},{"ruleId":"225","severity":1,"message":"263","line":21,"column":11,"nodeType":"227","messageId":"228","endLine":21,"endColumn":19},{"ruleId":"225","severity":1,"message":"264","line":47,"column":12,"nodeType":"227","messageId":"228","endLine":47,"endColumn":16},{"ruleId":"225","severity":1,"message":"265","line":89,"column":7,"nodeType":"227","messageId":"228","endLine":89,"endColumn":10},{"ruleId":"225","severity":1,"message":"266","line":99,"column":7,"nodeType":"227","messageId":"228","endLine":99,"endColumn":10},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'OnChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'list' is assigned a value but never used.","'setList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'skills'. Either include it or remove the dependency array.","ArrayExpression",["269"],"'Log' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'VISIBILITY_FILTERS' is defined but never used.","React Hook useEffect has a missing dependency: 'intArr'. Either include it or remove the dependency array. You can also do a functional update 'setInitArr(i => ...)' if you only need 'intArr' in the 'setInitArr' call.",["270"],"'useParams' is defined but never used.","'MultiRoute' is defined but never used.","'Comp1' is defined but never used.","'Comp2' is defined but never used.","'useState' is defined but never used.","'createStore' is defined but never used.","'combineReducers' is defined but never used.","'Provider' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'result' is assigned a value but never used.","'click' is assigned a value but never used.","'clickHandle' is assigned a value but never used.","'onHandle' is assigned a value but never used.","'text' is assigned a value but never used.","'Ex2' is assigned a value but never used.","'Ex3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [searchTerm, skills]",{"range":"275","text":"276"},"Update the dependencies array to be: [count, intArr]",{"range":"277","text":"278"},[427,439],"[searchTerm, skills]",[1408,1415],"[count, intArr]"]